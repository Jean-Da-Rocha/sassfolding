services:
  hybridly:
    stop_signal: SIGKILL
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-hybridly
    volumes:
      - .:/var/www/html
    networks:
      - laravel
    ports:
      - "${FPM_FORWARD_PORT}:${FPM_PORT}"
      - "${VITE_FORWARD_PORT}:${VITE_PORT}"

  nginx:
    image: nginx:${NGINX_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    environment:
      COMPOSE_PROJECT_NAME: ${COMPOSE_PROJECT_NAME}
      FPM_PORT: ${FPM_PORT}
    volumes:
      - ./docker/nginx/default.conf.template:/etc/nginx/templates/default.conf.template:ro
      - .:/var/www/html
      - ./certs:/etc/nginx/certs:ro
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - hybridly
    networks:
      - laravel

  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE_TESTING: ${COMPOSE_PROJECT_NAME}_testing
    volumes:
      - mysql-data:/var/lib/mysql
      - ./docker/scripts/create-testing-database.sh:/docker-entrypoint-initdb.d/create-testing-database.sh
    ports:
      - "${DB_FORWARD_PORT}:${DB_PORT}"
    networks:
      - laravel

  redis:
    image: redis:${REDIS_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-redis
    volumes:
      - redis-data:/data
    networks:
      - laravel

volumes:
  mysql-data:
    name: ${COMPOSE_PROJECT_NAME}-mysql-data
  redis-data:
    name: ${COMPOSE_PROJECT_NAME}-redis-data

networks:
  laravel:
    name: project.${COMPOSE_PROJECT_NAME}
