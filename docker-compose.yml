services:
  hybridly:
    stop_signal: SIGKILL
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    container_name: hybridly
    volumes:
      - .:/var/www/html
    networks:
      - laravel
    ports:
      - "${FPM_PORT}:${FPM_PORT}"
      - "${VITE_PORT}:${VITE_PORT}"

  nginx:
    image: nginx:${NGINX_VERSION}
    container_name: nginx
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - .:/var/www/html
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - hybridly
    networks:
      - laravel

  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql
    environment:
      APP_NAME: ${APP_NAME}
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/scripts/create-testing-database.sh:/docker-entrypoint-initdb.d/create-testing-database.sh
    ports:
      - "${FORWARD_DB_PORT}:${DB_PORT}"
    networks:
      - laravel

  redis:
    image: redis:${REDIS_VERSION}
    container_name: redis
    networks:
      - laravel

volumes:
  mysql_data:

networks:
  laravel:
    driver: bridge
